hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: null
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - train.n_subsample_gap=1,2
    - dataset_path=/home/yanni/projects/grassgp/scripts/outputs/2022-11-02/16-27-53/
    - subsample_conf.random=True
    - subsample_conf.n_x_samples=25
    - inner_model.grass_config.reorthonormalize=False,True
    - inner_model.grass_config.var=0.1,1.0,5.0
    - inner_model.grass_config.length=0.1,1.0,5.0
    - outer_model.gp_config.params.var=1.0
    - outer_model.gp_config.params.length=0.5
    - outer_model.gp_config.params.noise=0.1
  job:
    name: zen_launch
    chdir: null
    override_dirname: dataset_path=/home/yanni/projects/grassgp/scripts/outputs/2022-11-02/16-27-53/,inner_model.grass_config.length=0.1,1.0,5.0,inner_model.grass_config.reorthonormalize=False,True,inner_model.grass_config.var=0.1,1.0,5.0,outer_model.gp_config.params.length=0.5,outer_model.gp_config.params.noise=0.1,outer_model.gp_config.params.var=1.0,subsample_conf.n_x_samples=25,subsample_conf.random=True,train.n_subsample_gap=1,2
    id: ???
    num: ???
    config_name: zen_launch
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.2.0
    version_base: '1.1'
    cwd: /home/yanni/projects/grassgp/scripts
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
dataset_path: /home/yanni/projects/grassgp/scripts/outputs/2022-11-02/16-27-53/
subsample_conf:
  random: true
  n_x_samples: 25
  x_gap: 8
  s_gap: 2
  seed: 235
inner_model:
  _target_: grassgp.models.grassmann_process
  _partial_: true
  grass_config:
    anchor_point:
    - - 1.0
    - - 0.0
    Omega: null
    proj_locs: null
    var: null
    length: null
    noise: null
    require_noise: false
    jitter: 1.0e-06
    proj_jitter: 0.0001
    L_jitter: 1.0e-08
    reorthonormalize: true
    b: 5.0
outer_model:
  _target_: grassgp.models.univariate_gp_model
  _partial_: true
  gp_config:
    params:
      var: 1.0
      length: 0.5
      noise: 0.1
    jitter: 1.0e-06
    b: 10.0
svi:
  seed: 123514354575
  maxiter: 10000
  step_size: 0.001
train:
  seed: 9870687
  n_warmup: 1000
  n_samples: 1000
  n_chains: 1
  n_thinning: 2
  n_subsample_gap: 4
